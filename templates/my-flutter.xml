<templateSet group="my-flutter">
  <template name="fsstfulctrl" value="class $NAME$Manager extends StatefulWidget {&#10;    @override&#10;    _$NAME$State createState() =&gt; _$NAME$State();&#10;}&#10;&#10;class _$NAME$State extends State&lt;$NAME$&gt; {&#10;    @override&#10;    Widget build(BuildContext context) {&#10;        return Container(&#10;            child:_$NAME$Control(this.actionFunction);&#10;        );&#10;    }&#10;    &#10;    void actionFunction() {&#10;        setState((){});&#10;    }&#10;}&#10;&#10;class _$NAME$Control extends StatelessWidget {&#10;    final Function _action;&#10;    &#10;    _$NAME$Control(this._action);&#10;    &#10;    @override&#10;    Widget build(BuildContext context) {&#10;        return new RaisedButton(&#10;            child: new Text('按钮'),&#10;            onPressed:() {&#10;                this._action();&#10;            }&#10;        );&#10;    }&#10;}" description="new StatefulWidget with action" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="capitalize(String)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="DART_TOPLEVEL" value="true" />
    </context>
  </template>
  <template name="fsstful" value="class $NAME$ extends StatefulWidget {&#10;  @override&#10;  _$NAME$State createState() =&gt; _$NAME$State();&#10;}&#10;&#10;class _$NAME$State extends State&lt;$NAME$&gt; {&#10;  @override&#10;  Widget build(BuildContext context) {&#10;    return Container($END$);&#10;  }&#10;}&#10;" description="New StatefulWidget" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="DART_TOPLEVEL" value="true" />
    </context>
  </template>
  <template name="fsdrawer" value="Drawer(&#10;  child: Column(&#10;    children: &lt;Widget&gt;[&#10;      AppBar(&#10;        // 不需要保留左侧的菜单图标&#10;        automaticallyImplyLeading: false,&#10;        // 标题文字&#10;        title: Text('left'),&#10;      )&#10;    ],&#10;  ),&#10;)" description="抽屉页" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="DART_TOPLEVEL" value="true" />
    </context>
  </template>
  <template name="demoDropDown" value="import 'package:flutter/material.dart';&#10;&#10;// drop_down.dart&#10;class DropDownWidget extends StatefulWidget {&#10;  @override&#10;  State&lt;StatefulWidget&gt; createState() {&#10;    return _DropDownState();&#10;  }&#10;}&#10;&#10;class _DropDownState extends State&lt;DropDownWidget&gt; {&#10;  var _selectItemValue;&#10;  List&lt;DropdownMenuItem&gt; itemList() {&#10;    List&lt;DropdownMenuItem&gt; items = new List();&#10;    items.add(new DropdownMenuItem(value: '赵一', child: new Text('赵一')));&#10;    items.add(new DropdownMenuItem(value: '钱二', child: new Text('钱二')));&#10;    items.add(new DropdownMenuItem(value: '孙三', child: new Text('孙三')));&#10;    return items;&#10;  }&#10;&#10;  @override&#10;  Widget build(BuildContext context) {&#10;    // 下拉菜单展示的内容处没有下划线&#10;    return new DropdownButtonHideUnderline(&#10;      child: new DropdownButton(&#10;        hint: new Text('下拉菜单选择一个人名'),&#10;        value: _selectItemValue,&#10;        items: itemList(),&#10;        onChanged: (T) {&#10;          setState(() {&#10;            _selectItemValue = T;&#10;          });&#10;        },&#10;      ),&#10;    );&#10;  }&#10;}&#10;" description="a dropDown demo page" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="DART_TOPLEVEL" value="true" />
    </context>
  </template>
  <template name="demoPopupMenu" value="import 'package:flutter/material.dart';&#10;&#10;void main() =&gt; runApp(new BasicAppBarSample());&#10;&#10;// 菜单&#10;class Choice {&#10;  final String title;&#10;  final IconData icon;&#10;  const Choice({this.title, this.icon});&#10;}&#10;// 选项信息&#10;const List&lt;Choice&gt; choices = const &lt;Choice&gt;[&#10;  const Choice(title: 'Car', icon: Icons.directions_car),&#10;  const Choice(title: 'Bicycle', icon: Icons.directions_bike),&#10;  const Choice(title: 'Boat', icon: Icons.directions_boat),&#10;  const Choice(title: 'Bus', icon: Icons.directions_bus),&#10;  const Choice(title: 'Train', icon: Icons.directions_railway),&#10;  const Choice(title: 'Walk', icon: Icons.directions_walk),&#10;];&#10;&#10;class ChoiceCard extends StatelessWidget {&#10;  &#10;  final Choice choice;&#10;  const ChoiceCard({this.choice, Key key}) : super(key: key);&#10;&#10;  @override&#10;  Widget build(BuildContext context) {&#10;    final TextStyle textStyle = Theme.of(context).textTheme.display1;&#10;    return new Card(&#10;      color: Colors.white,&#10;      child: new Center(&#10;        child: new Column(&#10;          mainAxisSize: MainAxisSize.min,&#10;          crossAxisAlignment: CrossAxisAlignment.center,&#10;          children: &lt;Widget&gt;[&#10;            new Icon(choice.icon, size: 128.0, color: textStyle.color),&#10;            new Text(&#10;              choice.title,&#10;              style: textStyle,&#10;            ),&#10;          ],&#10;        ),&#10;      ),&#10;    );&#10;  }&#10;}&#10;&#10;class BasicAppBarSample extends StatefulWidget {&#10;  @override&#10;  _BasicAppBarSampleState createState() {&#10;    return new _BasicAppBarSampleState();&#10;  }&#10;}&#10;&#10;class _BasicAppBarSampleState extends State&lt;BasicAppBarSample&gt; {&#10;  Choice _selectedChoice = choices[0]; // 默认的状态&#10;&#10;  void _select(Choice choice) {&#10;    // 重新渲染选项卡&#10;    setState(() {&#10;      _selectedChoice = choice;&#10;    });&#10;  }&#10;&#10;  @override&#10;  Widget build(BuildContext context) {&#10;    return new MaterialApp(&#10;      home: new Scaffold(&#10;        appBar: new AppBar(&#10;          title: const Text('Basic AppBar'),&#10;          actions: &lt;Widget&gt;[&#10;            new IconButton(&#10;                icon: Icon(choices[0].icon),&#10;                onPressed: () {&#10;                  _select(choices[0]);&#10;                }),&#10;            new IconButton(&#10;                icon: Icon(choices[1].icon),&#10;                onPressed: () {&#10;                  _select(choices[1]);&#10;                }),&#10;            new PopupMenuButton(&#10;              itemBuilder: (BuildContext context) {&#10;                return choices.skip(2).map((Choice choice) {&#10;                  return new PopupMenuItem(&#10;                    child: new Text(choice.title),&#10;                    value: choice,&#10;                  );&#10;                }).toList();&#10;              },&#10;              onSelected: _select,&#10;            )&#10;          ],&#10;        ),&#10;        body: new Padding(&#10;          padding: const EdgeInsets.all(16.0),&#10;          child: new ChoiceCard(&#10;            choice: _selectedChoice,&#10;          ),&#10;        ),&#10;      ),&#10;    );&#10;  }&#10;}&#10;" description="带标题、操作和溢出下拉菜单页面" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="DART_TOPLEVEL" value="true" />
    </context>
  </template>
</templateSet>